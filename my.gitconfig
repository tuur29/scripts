
# TIPS:
# - On windows WSL: `git config --global credential.helper "/mnt/c/Program\\ Files/Git/mingw64/libexec/git-core/git-credential-wincred.exe"`
# - You can include this into your own gitconfig by adding this at the top of yours:
# 	`[include] path = "C:/github/scripts/my.gitconfig"`

[user]
	name = 
	email = 
	username = 

[core]
	editor = nano
	autocrlf = input
	eol = lf
	excludesfile = ~/.gitignore_global

[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f

[alias]

	# Shortcuts
	abort = merge --abort
	branches = branch -av
	branchname = rev-parse --abbrev-ref HEAD
	changedfiles = ! git add . && git diff --cached --stat
	changes = ! git add . && git diff --cached -U4 --compact-summary
	commitall = ! git add . && git commit -a -m
	details = log -n1 -p --format=fuller
	discard = ! sh -c 'git stash push -- $1 && git stash drop -q' -
	find = ! git ls-files | grep
	history = log --compact-summary --
	out = log --branches --not --remotes
	pushnew = push -u origin HEAD
	root = rev-parse --show-toplevel
	search = grep -i
	stage = add
	tags = tag -l
	undo = reset --soft HEAD~1
	unstage = reset HEAD --

	# Functions
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ / | grep --color=always -E '^[^=]+=' | less -S -R
	amend = ! git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend
	backup = ! sh -c 'git bundle create ../$(basename $PWD)_$(date "+%s").git-bundle --all' -
	changelog = log --graph --all --date=local --name-status --format=format:'%C(cyan)%h%C(reset) - %C(red)%d%C(reset) - %C(white)(%ai)%C(reset) %C(white dim)%s%C(reset) %C(white) -- %an%C(reset)' --abbrev-commit --color
	clonegh = ! sh -c 'git clone https://github.com/$1.git $(basename $1) && cd $(basename $1)' -
	countchanges = ! git log --all -M -C --name-only --format='format:' "$@" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print "count,file"} {print $1 "," $2}' | less
	fullreset = ! git fetch origin && git reset --hard @{u}
	graph = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
	in = ! sh -c 'git log --shortstat HEAD..origin/$(git branchname)'
	issues = ! start $(echo https://github.$(git config remote.origin.url | cut -f2 -d.)/issues)
	rembrgrep = ! sh -c 'git branch | grep $1 | xargs git branch -D' -
	syncfork = ! git fetch upstream && git merge upstream/$(git branchname)
	authtest = ! ssh -T git@github.com

	# Abbreviations
	br = branch --all
	brd = branch -d
	c = ! git changes
	check = checkout
	clg = ! git clonehub
	cm = commit -m
	cma = ! git commitall
	f = fetch --all --prune
	p = ! git fetch --all --prune && git pull
	pl = pull
	ps = push
	st = status --short
	t = tag
